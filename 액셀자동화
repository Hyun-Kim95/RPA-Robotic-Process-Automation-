pip install openpyxl  # 오픈파이엑셀 설치
from openpyxl import Workbook  # 임포트 워크북
wb = Workbook()  # 새 워크북 생성
ws = wb.active  # 현재 활성화된 sheet 가져옴
ws.title = "NadoSheet"  # sheet의 이름을 변경
wb.save("sample.xlsx")  # 저장(이름)
wb.close()  # 파일닫음
ws = wb.create_sheet()  # 새로운 sheet 기본 이름으로 생성
ws.sheet_properties.tabColor = "ff66ff"  # RGB 형태로 넣어주면 탭 색상 변경  # 구글에 RGB 검색하면 나옴
ws1 = wb.create_sheet("YourSheet")  # 주어진 이름으로 sheet 생성
ws2 = wb.create_sheet("NewSheet", 2)  # 2번째 index에 sheet 생성
print(wb.sheetnames)  # 모든 sheet 이름 확인
new_ws = wb["NewSheet"]  # Dict 형태로 sheet 에 접근
new_ws["A1"] = "Test"  # A1셀에 'Test'라고 입력
target = wb.copy_worksheet(new_ws)  # new_ws 를 복사한 target 을 생성
target.title = "Copied Sheet"  # target 이름 변경
print(ws["A1"])  # A1 셀의 정보를 출력<Cell 'NadoSheet'.A1>
print(ws["A1"].value)  # A1 셀의 값을 출력 1
print(ws["A10"].value)  # 값이 없을 땐 'None' 을 출력
print(ws.cell(row=1,column=1).value)  # ws["A1"].value                   # row = 1,2,3,...
print(ws.cell(row=1,column=2).value)  # ws["B1"].value                   # column = A(1),B(2),C(3),...
print(ws.cell(column=2,row=1).value)  # row 랑 column 자리는 상관 없음
c = ws.cell(column=3, row=1, value=10)  # ws["C1"].value = 10            # 이런식으로도 가능
print(c.value)  # ws["C1"].value
from openpyxl import load_workbook  # 파일 불러오기
wb = load_workbook("sample.xlsx")  # sample.xlsx 파일에서 wb 을 불러옴

# cell 데이터 불러오기
    for x in range(1,11):
        for y in range(1,11):
            print(ws.cell(row=x, column=y).value, end=" ")  # 1 2 3 4 ...
        print()


# cell 갯수를 모를 때
    for x in range(1, ws.max_row + 1):
        for y in range(1, ws.max_column + 1):
            print(ws.cell(row=x, column=y).value, end=" ")
        print()

# 셀 영역(1)
    # 1줄씩 데이터 넣기
    ws.append(["번호", "영어", "수학"])  # A, B, C
    for i in range(1,11):  # 10개 데이터 넣기
        ws.append([i, randint(0,100), randint(0,100)])


    col_B = ws["B"]  # 영어 column 만 가지고 오기
    # print(col_B)
    for cell in col_B:
        print(cell.value)


    col_range = ws["B:C"]  # 영어, 수학 column 함깨 가지고 오기
    for cols in col_range:
        for cell in cols:
            print(cell.value)


    row_title = ws[1]  # 1번재 row만 가지고 오기
    for cell in row_title:
        print(cell.value)


    row_range = ws[2:6]  # 1번째 줄인 title을 제외하고 2번째 줄에서 6번째 줄까지 가지고 옴(6번째 줄 포함임)
    for rows in row_range:
        for cell in rows:
            print(cell.value, end=" ")
        print()


    from openpyxl.utils.cell import coordinate_from_string

    row_range = ws[2:ws.max_row]  # 두번째 줄부터 마지막 줄까지
    for rows in row_range:
        for cell in rows:
            print(cell.value, end=" ")
            print(cell.coordinate, end=" ")   # coordinate: 셀의 좌표정보 알려줌
            xy = coordinate_from_string(cell.coordinate)    # A1 을 (A,1) 이런 식으로 끊어서 표현해줌
            print(xy, end=" ")
            print(xy[0], end="")  # A
            print(xy[1], end=" ")  # 1
        print()

# 셀 영역(2)
    # 전체 rows
      print(tuple(ws.rows))     # ((<Cell 'Sheet'.A1>, <Cell 'Sheet'.B1>, <Cell 'Sheet'.C1>), ...

      for row in tuple(ws.rows):
          print(row[1].value)     # 수학 줄들을 가져옴([1].value 없으면 cell번호로 다 프린트)

      for row in ws.iter_rows():  # 전체 row
          print(row[2].value)


    # 전체 columns
      print(tuple(ws.columns))      # ((<Cell 'Sheet'.A1>, <Cell 'Sheet'.A2>, <Cell 'Sheet'.A3>, ...

      for column in tuple(ws.columns):
          print(column[0].value)      # (0번째 인덱스)재목만 가져옴

      for column in ws.iter_cols():  # 전체 column
          print(column[0].value)


    # 2번째 줄부터 11번째 줄까지, 2번째 열부터 3번째 열까지 범위설정(가로로 한줄씩 읽을거면 row, 세로로 한줄씩 읽을거면 column)
      for row in ws.iter_rows(min_row=2, max_row=11, min_col=2, max_col=3):
          print(row[0].value, row[1].value)   # 수학, 영어

# 찾기
    for row in ws.iter_rows(min_row=2):   # 영어 성적이 90점 이상인 학생의 번호를 출력
        # 번호, 영어, 수학
        if int(row[1].value) > 90:
            print(row[0].value, "번 학생은 영어 천재")

    for row in ws.iter_rows(max_row=1):   # 첫번째 줄에 영어를 컴퓨터로 변경
        for cell in row:
            if cell.value == "영어":
                cell.value = "컴퓨터"

# 삽입
    ws.insert_rows(8)  # 8번째 줄이 비워짐
    ws.insert_rows(8,5)  # 8번째 줄 위치에 5줄을 추가
    wb.save("sample_insert_rows.xlsx")

    ws.insert_cols(2)  # B번째 열이 비워짐 (새로운 빈 열이 추가)
    ws.insert_cols(2,3)  # B번째 열로부터 3열 추가
    wb.save("sample_insert_cols.xlsx")

# 삭제
    ws.delete_rows(8)  # 8번째 줄에 있는 7번 학생 데이터 삭제
    ws.delete_rows(8,3)  # 8번째 줄부터 총 3줄 삭제

    ws.delete_cols(2)  # 2번째 열 (B) 삭제
    ws.delete_cols(2,2)  # 2번째 열로부터 총 2개 열 삭제

# 이동
    ws.move_range("B1:C11", rows=0, cols=1)  # 옮길범위, 옮길 거리
    ws["B1"].value = "국어"  # B1 셀에 '국어' 입력

# 차트
    from openpyxl.chart import BarChart, Reference, LineChart
    # B2:C11 까지의 데이터를 차트로 생성
      bar_value = Reference(ws, min_row=2, max_row=11, min_col=2, max_col=3)
      bar_chart = BarChart()                              # 차트 종류 설정(Bar, Line, Pie, ...)
      bar_chart.add_data(bar_value)                       # 차트 데이터 추가
      ws.add_chart(bar_chart, "E1")                       # 차트 넣을 위치 정의
    
    # B1:C11 까지의 데이터를 차트로 생성
      line_value = Reference(ws, min_row=1, max_row=11, min_col=2, max_col=3)
      line_chart = LineChart()
      line_chart.add_data(line_value, titles_from_data=True)     # 계열 > 영어, 수학(제목에서 가져옴)
      line_chart.title = "성적표"                                # 제목
      line_chart.style = 10                                      # 미리 정의된 스타일을 적용, 사용자가 개별 지정도 가능
      line_chart.y_axis.title = "점수"                           # Y축의 제목
      line_chart.x_axis.title = "번호"                           # X축의 제목
      ws.add_chart(line_chart, "E1")
      
      # 구글에 openpyxl 검색하면 사이트 나오는데 거기서 찾아보면 더 자세한 것들도 알 수 있음

# 셀 스타일(1)
    from openpyxl.styles import Font, Border, Side
    from openpyxl import load_workbook
    wb = load_workbook("sample.xlsx")
    ws = wb.active

    a1 = ws["A1"]  # 번호
    b1 = ws["B1"]  # 영어
    c1 = ws["C1"]  # 수학

    # A 열의 너비를 5로 설정
    ws.column_dimensions["A"].width = 5

    # 1 행의 높이를 50으로 설정
    ws.row_dimensions[1].height =50

    # 스타일 적용
    a1.font = Font(color="FF0000", italic=True, bold=True)  #(빨강), 이탤릭, 두껍게 적용
    b1.font = Font(color="CC33FF", name="Arial", strike=True)  #(분홍), 폰트는 Arial 로 설정, 취소선 적용
    c1.font = Font(color="0000FF", size=20, underline="single")  #(파랑), 글자 크기를 20으로, 밑줄 적용

    # 테두리 적용
    thin_border = Border(left=Side(style="thin"), right=Side(style="thin"), top=Side(style="thin"), bottom=Side(style="thin"))
    a1.border = thin_border
    b1.border = thin_border
    c1.border = thin_border

# 셀 스타일(2)
    from openpyxl.styles import Font, Border, Side, PatternFill, Alignment
    # 90 점 넘는 셀에 대해서 초록색으로 적용
    for row in ws.rows:
        for cell in row:
            # 각 cell 에 대해서 정렬(가로, 세로)
            cell.alignment = Alignment(horizontal="center", vertical="center")
            # ex) center, left, right, top, bottom

            if cell.column == 1:  # A 번호열은 제외
                continue
            # cell이 정수이고 90점 보다 높으면
            if isinstance(cell.value, int) and cell.value > 90:
                cell.fill = PatternFill(fgColor="00FF00", fill_type="solid")  # 배경을 초록색으로 설정
                cell.font = Font(color="FF0000")  # 폰트 색상 변경

    # 틀 고정
    ws.freeze_panes = "B2"  # B2 기준으로 위와 왼쪽이 틀 고정됨

# 수식
    import datetime
    ws["A1"] = datetime.datetime.today()    # 오늘 날짜 정보
    ws["A2"] = "=SUM(1,2,3)"                # 1 + 2 + 3 = 6(합계)
    ws["A3"] = "=AVERAGE(1, 2, 3)"          # 6(평균)

    ws["A4"] = 10
    ws["A5"] = 20
    ws["A6"] = "=SUM(A4:A5)"                # 30

# 수식(데이터 전용)
  # 수식 그대로 가져옴
    wb = load_workbook("sample_formula.xlsx")
    ws = wb.active

    for row in ws.values:
        for cell in row:
            print(cell)

  # 수식 결과를 가져옴
    wb = load_workbook("sample_formula.xlsx", data_only=True)
    ws = wb.active

    # evaluate 되지 않은 상태의 데이터는 None 이라고 표시
    # -> 엑셀을 열고 저장하고 닫으면 계산된 결과가 저장돼있음
    for row in ws.values:
        for cell in row:
            print(cell)

# 셀 병합
  # 병합하기
    ws.merge_cells("B2:D2")  # B2 부터 D2 까지 합치겠음
    ws["B2"].value = "Merged Cell"
  # B2:D2 병합되어 있던 셀을 해제
    ws.unmerge_cells("B2:D2")

# 이미지 삽입
